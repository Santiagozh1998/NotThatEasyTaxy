{"ast":null,"code":"import _classCallCheck from \"/home/santiago/Escritorio/NotThatEasyTaxy/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/santiago/Escritorio/NotThatEasyTaxy/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/santiago/Escritorio/NotThatEasyTaxy/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/santiago/Escritorio/NotThatEasyTaxy/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/santiago/Escritorio/NotThatEasyTaxy/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { MapLayer } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet-routing-machine';\n\nvar RoutingMachine =\n/*#__PURE__*/\nfunction (_MapLayer) {\n  _inherits(RoutingMachine, _MapLayer);\n\n  function RoutingMachine() {\n    _classCallCheck(this, RoutingMachine);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RoutingMachine).apply(this, arguments));\n  }\n\n  _createClass(RoutingMachine, [{\n    key: \"createLeafletElement\",\n    value: function createLeafletElement() {\n      var _this$props = this.props,\n          color = _this$props.color,\n          map = _this$props.map,\n          road = _this$props.road;\n      var leafletElement = L.Routing.control({\n        waypoints: road,\n        lineOptions: {\n          styles: [{\n            color: color,\n            opacity: .8,\n            weight: 6\n          }]\n        },\n        addWaypoints: false,\n        draggableWaypoints: false,\n        fitSelectedRoutes: false,\n        showAlternatives: false,\n        altLineOptions: {\n          styles: [{\n            opacity: 0\n          }]\n        },\n        createMarker: function createMarker() {\n          return null;\n        }\n      }).addTo(map);\n      return leafletElement.getPlan();\n    }\n  }]);\n\n  return RoutingMachine;\n}(MapLayer);\n\nexport default RoutingMachine;","map":{"version":3,"sources":["/home/santiago/Escritorio/NotThatEasyTaxy/client/src/components/map/routing-machine.js"],"names":["MapLayer","L","RoutingMachine","props","color","map","road","leafletElement","Routing","control","waypoints","lineOptions","styles","opacity","weight","addWaypoints","draggableWaypoints","fitSelectedRoutes","showAlternatives","altLineOptions","createMarker","addTo","getPlan"],"mappings":";;;;;AAAA,SAAQA,QAAR,QAAuB,eAAvB;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAO,yBAAP;;IAEMC,c;;;;;;;;;;;;;2CAEqB;AAAA,wBACU,KAAKC,KADf;AAAA,UACXC,KADW,eACXA,KADW;AAAA,UACJC,GADI,eACJA,GADI;AAAA,UACCC,IADD,eACCA,IADD;AAGnB,UAAIC,cAAc,GAAGN,CAAC,CAACO,OAAF,CAAUC,OAAV,CAAkB;AACrCC,QAAAA,SAAS,EAAEJ,IAD0B;AAErCK,QAAAA,WAAW,EAAE;AACXC,UAAAA,MAAM,EAAE,CAAC;AACPR,YAAAA,KAAK,EAALA,KADO;AAEPS,YAAAA,OAAO,EAAE,EAFF;AAGPC,YAAAA,MAAM,EAAE;AAHD,WAAD;AADG,SAFwB;AASrCC,QAAAA,YAAY,EAAE,KATuB;AAUrCC,QAAAA,kBAAkB,EAAE,KAViB;AAWrCC,QAAAA,iBAAiB,EAAE,KAXkB;AAYrCC,QAAAA,gBAAgB,EAAE,KAZmB;AAarCC,QAAAA,cAAc,EAAE;AAAEP,UAAAA,MAAM,EAAE,CAAC;AAACC,YAAAA,OAAO,EAAE;AAAV,WAAD;AAAV,SAbqB;AAcrCO,QAAAA,YAAY,EAAE,wBAAM;AAAE,iBAAO,IAAP;AAAc;AAdC,OAAlB,EAgBpBC,KAhBoB,CAgBdhB,GAhBc,CAArB;AAkBA,aAAOE,cAAc,CAACe,OAAf,EAAP;AACD;;;;EAxBsBtB,Q;;AA2B7B,eAAeE,cAAf","sourcesContent":["import {MapLayer} from 'react-leaflet'\nimport L from 'leaflet'\nimport 'leaflet-routing-machine'\n\nclass RoutingMachine extends MapLayer {\n\n    createLeafletElement() {\n        const { color, map, road } = this.props;\n    \n        let leafletElement = L.Routing.control({\n          waypoints: road,\n          lineOptions: {\n            styles: [{ \n              color, \n              opacity: .8,\n              weight: 6 \n            }]\n          },\n          addWaypoints: false,\n          draggableWaypoints: false,\n          fitSelectedRoutes: false,\n          showAlternatives: false,\n          altLineOptions: { styles: [{opacity: 0}] },\n          createMarker: () => { return null; }\n        })\n        .addTo(map);\n    \n        return leafletElement.getPlan();\n      }\n}\n\nexport default RoutingMachine;"]},"metadata":{},"sourceType":"module"}